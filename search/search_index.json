{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Introduction Technical setup Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft) Useful links Python Miniconda Documentation Google Colab How to use this repository Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW Where can I find the problems? Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Introduction"},{"location":"#introduction","text":"","title":"Introduction"},{"location":"#technical-setup","text":"Install Visual Studio Code from here Install folowing extensions in Visual Studio Code: Github Repositories (GitHub, Inc.) GitHub Copilot (GitHub Copilot) GitHub Actions (GitHub, Inc.) Python (Microsoft)","title":"Technical setup"},{"location":"#useful-links","text":"Python Miniconda Documentation Google Colab","title":"Useful links"},{"location":"#how-to-use-this-repository","text":"Below are the steps you need to follow: Create a GitHub account if you don\u2019t have one. Fork this repository to your account. Enable the Issues tab: Go to the Settings tab and check the Issues option. Add your professor as a collaborator: Go to the Settings tab and add their GitHub username in the Collaborators section. Install python: Download Source Code & WWW GitHub repo WWW","title":"How to use this repository"},{"location":"#where-can-i-find-the-problems","text":"Please visit the Mathematics Physics Lectures website. Physics Mathematics Discret Mathematics","title":"Where can I find the problems?"},{"location":"1%20Physics/1%20Mechanics/Problem_1/","text":"Problem 1 Investigating the Range as a Function of the Angle of Projection Motivation: Projectile motion offers an ideal context to explore fundamental principles of physics, blending theoretical rigor with practical relevance. Whether it\u2019s the trajectory of a soccer ball or the launch of a rocket, understanding how the range of a projectile depends on the angle of projection provides a deep insight into how we model motion under gravity. In this task, we will explore the relationship between the range of a projectile and the angle at which it is launched. While this is often a simple problem in introductory physics, it touches on a range of deeper principles\u2014especially when we account for varying initial conditions such as velocity, height, and gravitational acceleration. Theoretical Foundation To begin, we need to derive the governing equations for projectile motion. Let's start by establishing the general form of the motion based on Newton\u2019s laws. Equations of Motion: In projectile motion, we treat the horizontal and vertical motions separately, as they are independent of each other (with the horizontal motion having no acceleration in ideal conditions). Horizontal motion (x-direction): \ud835\udc65 ( \ud835\udc61 ) = \ud835\udc63 0 cos \u2061 ( \ud835\udf03 ) \u22c5 \ud835\udc61 x(t)=v 0 \u200b cos(\u03b8)\u22c5t where: \ud835\udc63 0 v 0 \u200b is the initial velocity, \ud835\udf03 \u03b8 is the angle of projection, \ud835\udc61 t is the time, cos \u2061 ( \ud835\udf03 ) cos(\u03b8) is the horizontal component of the initial velocity. Vertical motion (y-direction): \ud835\udc66 ( \ud835\udc61 ) = \ud835\udc63 0 sin \u2061 ( \ud835\udf03 ) \u22c5 \ud835\udc61 \u2212 1 2 \ud835\udc54 \ud835\udc61 2 y(t)=v 0 \u200b sin(\u03b8)\u22c5t\u2212 2 1 \u200b gt 2 where: \ud835\udc54 g is the acceleration due to gravity, \ud835\udc63 0 sin \u2061 ( \ud835\udf03 ) v 0 \u200b sin(\u03b8) is the vertical component of the initial velocity. The point where the projectile returns to the ground occurs when \ud835\udc66 ( \ud835\udc61 ) = 0 y(t)=0, so we can solve for the time of flight, \ud835\udc47 T. Time of Flight: Set \ud835\udc66 ( \ud835\udc61 ) = 0 y(t)=0 for the point where the projectile hits the ground: 0 \ud835\udc63 0 sin \u2061 ( \ud835\udf03 ) \u22c5 \ud835\udc47 \u2212 1 2 \ud835\udc54 \ud835\udc47 2 0=v 0 \u200b sin(\u03b8)\u22c5T\u2212 2 1 \u200b gT 2 Factoring out \ud835\udc47 T: \ud835\udc47 ( \ud835\udc63 0 sin \u2061 ( \ud835\udf03 ) \u2212 1 2 \ud835\udc54 \ud835\udc47 ) = 0 T(v 0 \u200b sin(\u03b8)\u2212 2 1 \u200b gT)=0 This gives the time of flight: \ud835\udc47 2 \ud835\udc63 0 sin \u2061 ( \ud835\udf03 ) \ud835\udc54 T= g 2v 0 \u200b sin(\u03b8) \u200b Horizontal Range (R): The horizontal range \ud835\udc45 R is the horizontal distance the projectile travels before it hits the ground. Using the time of flight, we can find \ud835\udc45 R: \ud835\udc45 \ud835\udc65 ( \ud835\udc47 ) = \ud835\udc63 0 cos \u2061 ( \ud835\udf03 ) \u22c5 \ud835\udc47 = \ud835\udc63 0 cos \u2061 ( \ud835\udf03 ) \u22c5 2 \ud835\udc63 0 sin \u2061 ( \ud835\udf03 ) \ud835\udc54 R=x(T)=v 0 \u200b cos(\u03b8)\u22c5T=v 0 \u200b cos(\u03b8)\u22c5 g 2v 0 \u200b sin(\u03b8) \u200b Simplifying: \ud835\udc45 \ud835\udc63 0 2 sin \u2061 ( 2 \ud835\udf03 ) \ud835\udc54 R= g v 0 2 \u200b sin(2\u03b8) \u200b This equation describes the range as a function of the angle of projection \ud835\udf03 \u03b8, the initial velocity \ud835\udc63 0 v 0 \u200b , and gravitational acceleration \ud835\udc54 g. Analysis of the Range Now that we have the expression for the range \ud835\udc45 R, let\u2019s analyze how it depends on various factors: Range as a function of the angle \ud835\udf03 \u03b8: \ud835\udc45 ( \ud835\udf03 ) = \ud835\udc63 0 2 sin \u2061 ( 2 \ud835\udf03 ) \ud835\udc54 R(\u03b8)= g v 0 2 \u200b sin(2\u03b8) \u200b The range reaches its maximum when sin \u2061 ( 2 \ud835\udf03 ) sin(2\u03b8) is maximized, which occurs at \ud835\udf03 = 45 \u2218 \u03b8=45 \u2218 . For angles less than 45 \u2218 45 \u2218 , the range increases as \ud835\udf03 \u03b8 approaches 45 \u2218 45 \u2218 , after which it decreases. Effect of initial velocity \ud835\udc63 0 v 0 \u200b : The range is directly proportional to the square of the initial velocity. A higher initial velocity leads to a greater range. Effect of gravitational acceleration \ud835\udc54 g: The range is inversely proportional to the gravitational acceleration. On the Moon, where \ud835\udc54 g is weaker, the range would be much greater than on Earth, for the same initial velocity and launch angle. Practical Applications This theoretical model can be adapted to real-world situations with modifications for factors such as: Launch height: If the projectile is launched from a height, the time of flight will be longer, affecting the range. Air resistance: For objects moving through the atmosphere, drag must be taken into account. The range is no longer a simple function of sin \u2061 ( 2 \ud835\udf03 ) sin(2\u03b8), and numerical methods or simulations must be used to model the trajectory. Uneven terrain: If the projectile lands on sloped terrain, the range calculation becomes more complex, requiring consideration of the terrain\u2019s angle and the projectile's trajectory. Implementation Now, let's simulate projectile motion and visualize the range as a function of the angle of projection using Python. The following code simulates the projectile motion for different launch angles and initial velocities. Python Code (Simulation of Projectile Motion): python Kopyala import numpy as np import matplotlib.pyplot as plt def projectile_motion(v0, angle, g=9.81): # Time of flight T = 2 * v0 * np.sin(np.radians(angle)) / g # Time intervals t = np.linspace(0, T, num=500) # Horizontal and vertical motion equations x = v0 * np.cos(np.radians(angle)) * t y = v0 * np.sin(np.radians(angle)) * t - 0.5 * g * t**2 return x, y, T def plot_range_vs_angle(v0, g=9.81): angles = np.linspace(0, 90, 91) ranges = [] for angle in angles: x, y, T = projectile_motion(v0, angle, g) ranges.append(x[-1]) # Horizontal range is the last x value plt.figure(figsize=(8, 6)) plt.plot(angles, ranges, label=f\"v0 = {v0} m/s\") plt.title(\"Range vs. Angle of Projection\") plt.xlabel(\"Angle of Projection (degrees)\") plt.ylabel(\"Range (m)\") plt.grid(True) plt.legend() plt.show() Example usage v0 = 20 # Initial velocity in m/s plot_range_vs_angle(v0) Explanation: projectile_motion(v0, angle, g): This function calculates the trajectory of the projectile for a given initial velocity, launch angle, and gravitational acceleration. plot_range_vs_angle(v0): This function computes the range for a range of launch angles and then plots the relationship between angle and range. Limitations of the Idealized Model While the model presented is elegant and useful for many scenarios, there are several limitations: Air resistance: In reality, drag slows down projectiles, altering their trajectory. This can be modeled using differential equations, but it requires numerical solutions. Wind: Wind can significantly alter the trajectory, especially at higher speeds. Launch height: We assumed the projectile was launched from the ground level. If launched from a height, the projectile would follow a different path, and the range could be extended or reduced. Earth\u2019s curvature: Over long distances, the curvature of the Earth could influence the projectile's path, although this is negligible for most practical scenarios. Conclusion Through this investigation, we derived the governing equations for projectile motion, analyzed how the range depends on the launch angle, and implemented a computational tool to simulate the motion. This model, while idealized, provides valuable insight into real-world projectile motion problems, which can be further refined by incorporating more realistic factors like air resistance or wind.","title":"Problem 1"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#problem-1","text":"Investigating the Range as a Function of the Angle of Projection Motivation: Projectile motion offers an ideal context to explore fundamental principles of physics, blending theoretical rigor with practical relevance. Whether it\u2019s the trajectory of a soccer ball or the launch of a rocket, understanding how the range of a projectile depends on the angle of projection provides a deep insight into how we model motion under gravity. In this task, we will explore the relationship between the range of a projectile and the angle at which it is launched. While this is often a simple problem in introductory physics, it touches on a range of deeper principles\u2014especially when we account for varying initial conditions such as velocity, height, and gravitational acceleration. Theoretical Foundation To begin, we need to derive the governing equations for projectile motion. Let's start by establishing the general form of the motion based on Newton\u2019s laws. Equations of Motion: In projectile motion, we treat the horizontal and vertical motions separately, as they are independent of each other (with the horizontal motion having no acceleration in ideal conditions). Horizontal motion (x-direction): \ud835\udc65 ( \ud835\udc61 ) = \ud835\udc63 0 cos \u2061 ( \ud835\udf03 ) \u22c5 \ud835\udc61 x(t)=v 0 \u200b cos(\u03b8)\u22c5t where: \ud835\udc63 0 v 0 \u200b is the initial velocity, \ud835\udf03 \u03b8 is the angle of projection, \ud835\udc61 t is the time, cos \u2061 ( \ud835\udf03 ) cos(\u03b8) is the horizontal component of the initial velocity. Vertical motion (y-direction): \ud835\udc66 ( \ud835\udc61 ) = \ud835\udc63 0 sin \u2061 ( \ud835\udf03 ) \u22c5 \ud835\udc61 \u2212 1 2 \ud835\udc54 \ud835\udc61 2 y(t)=v 0 \u200b sin(\u03b8)\u22c5t\u2212 2 1 \u200b gt 2 where: \ud835\udc54 g is the acceleration due to gravity, \ud835\udc63 0 sin \u2061 ( \ud835\udf03 ) v 0 \u200b sin(\u03b8) is the vertical component of the initial velocity. The point where the projectile returns to the ground occurs when \ud835\udc66 ( \ud835\udc61 ) = 0 y(t)=0, so we can solve for the time of flight, \ud835\udc47 T. Time of Flight: Set \ud835\udc66 ( \ud835\udc61 ) = 0 y(t)=0 for the point where the projectile hits the ground:","title":"Problem 1"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#0","text":"\ud835\udc63 0 sin \u2061 ( \ud835\udf03 ) \u22c5 \ud835\udc47 \u2212 1 2 \ud835\udc54 \ud835\udc47 2 0=v 0 \u200b sin(\u03b8)\u22c5T\u2212 2 1 \u200b gT 2 Factoring out \ud835\udc47 T: \ud835\udc47 ( \ud835\udc63 0 sin \u2061 ( \ud835\udf03 ) \u2212 1 2 \ud835\udc54 \ud835\udc47 ) = 0 T(v 0 \u200b sin(\u03b8)\u2212 2 1 \u200b gT)=0 This gives the time of flight:","title":"0"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#t","text":"2 \ud835\udc63 0 sin \u2061 ( \ud835\udf03 ) \ud835\udc54 T= g 2v 0 \u200b sin(\u03b8) \u200b Horizontal Range (R): The horizontal range \ud835\udc45 R is the horizontal distance the projectile travels before it hits the ground. Using the time of flight, we can find \ud835\udc45 R:","title":"\ud835\udc47"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#r","text":"\ud835\udc65 ( \ud835\udc47 ) = \ud835\udc63 0 cos \u2061 ( \ud835\udf03 ) \u22c5 \ud835\udc47 = \ud835\udc63 0 cos \u2061 ( \ud835\udf03 ) \u22c5 2 \ud835\udc63 0 sin \u2061 ( \ud835\udf03 ) \ud835\udc54 R=x(T)=v 0 \u200b cos(\u03b8)\u22c5T=v 0 \u200b cos(\u03b8)\u22c5 g 2v 0 \u200b sin(\u03b8) \u200b Simplifying:","title":"\ud835\udc45"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#r_1","text":"\ud835\udc63 0 2 sin \u2061 ( 2 \ud835\udf03 ) \ud835\udc54 R= g v 0 2 \u200b sin(2\u03b8) \u200b This equation describes the range as a function of the angle of projection \ud835\udf03 \u03b8, the initial velocity \ud835\udc63 0 v 0 \u200b , and gravitational acceleration \ud835\udc54 g. Analysis of the Range Now that we have the expression for the range \ud835\udc45 R, let\u2019s analyze how it depends on various factors: Range as a function of the angle \ud835\udf03 \u03b8: \ud835\udc45 ( \ud835\udf03 ) = \ud835\udc63 0 2 sin \u2061 ( 2 \ud835\udf03 ) \ud835\udc54 R(\u03b8)= g v 0 2 \u200b sin(2\u03b8) \u200b The range reaches its maximum when sin \u2061 ( 2 \ud835\udf03 ) sin(2\u03b8) is maximized, which occurs at \ud835\udf03 = 45 \u2218 \u03b8=45 \u2218 . For angles less than 45 \u2218 45 \u2218 , the range increases as \ud835\udf03 \u03b8 approaches 45 \u2218 45 \u2218 , after which it decreases. Effect of initial velocity \ud835\udc63 0 v 0 \u200b : The range is directly proportional to the square of the initial velocity. A higher initial velocity leads to a greater range. Effect of gravitational acceleration \ud835\udc54 g: The range is inversely proportional to the gravitational acceleration. On the Moon, where \ud835\udc54 g is weaker, the range would be much greater than on Earth, for the same initial velocity and launch angle. Practical Applications This theoretical model can be adapted to real-world situations with modifications for factors such as: Launch height: If the projectile is launched from a height, the time of flight will be longer, affecting the range. Air resistance: For objects moving through the atmosphere, drag must be taken into account. The range is no longer a simple function of sin \u2061 ( 2 \ud835\udf03 ) sin(2\u03b8), and numerical methods or simulations must be used to model the trajectory. Uneven terrain: If the projectile lands on sloped terrain, the range calculation becomes more complex, requiring consideration of the terrain\u2019s angle and the projectile's trajectory. Implementation Now, let's simulate projectile motion and visualize the range as a function of the angle of projection using Python. The following code simulates the projectile motion for different launch angles and initial velocities. Python Code (Simulation of Projectile Motion): python Kopyala import numpy as np import matplotlib.pyplot as plt def projectile_motion(v0, angle, g=9.81): # Time of flight T = 2 * v0 * np.sin(np.radians(angle)) / g # Time intervals t = np.linspace(0, T, num=500) # Horizontal and vertical motion equations x = v0 * np.cos(np.radians(angle)) * t y = v0 * np.sin(np.radians(angle)) * t - 0.5 * g * t**2 return x, y, T def plot_range_vs_angle(v0, g=9.81): angles = np.linspace(0, 90, 91) ranges = [] for angle in angles: x, y, T = projectile_motion(v0, angle, g) ranges.append(x[-1]) # Horizontal range is the last x value plt.figure(figsize=(8, 6)) plt.plot(angles, ranges, label=f\"v0 = {v0} m/s\") plt.title(\"Range vs. Angle of Projection\") plt.xlabel(\"Angle of Projection (degrees)\") plt.ylabel(\"Range (m)\") plt.grid(True) plt.legend() plt.show()","title":"\ud835\udc45"},{"location":"1%20Physics/1%20Mechanics/Problem_1/#example-usage","text":"v0 = 20 # Initial velocity in m/s plot_range_vs_angle(v0) Explanation: projectile_motion(v0, angle, g): This function calculates the trajectory of the projectile for a given initial velocity, launch angle, and gravitational acceleration. plot_range_vs_angle(v0): This function computes the range for a range of launch angles and then plots the relationship between angle and range. Limitations of the Idealized Model While the model presented is elegant and useful for many scenarios, there are several limitations: Air resistance: In reality, drag slows down projectiles, altering their trajectory. This can be modeled using differential equations, but it requires numerical solutions. Wind: Wind can significantly alter the trajectory, especially at higher speeds. Launch height: We assumed the projectile was launched from the ground level. If launched from a height, the projectile would follow a different path, and the range could be extended or reduced. Earth\u2019s curvature: Over long distances, the curvature of the Earth could influence the projectile's path, although this is negligible for most practical scenarios. Conclusion Through this investigation, we derived the governing equations for projectile motion, analyzed how the range depends on the launch angle, and implemented a computational tool to simulate the motion. This model, while idealized, provides valuable insight into real-world projectile motion problems, which can be further refined by incorporating more realistic factors like air resistance or wind.","title":"Example usage"},{"location":"1%20Physics/1%20Mechanics/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/1%20Mechanics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/2%20Gravity/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/2%20Gravity/Problem_3/","text":"Problem 3","title":"Problem 3"},{"location":"1%20Physics/2%20Gravity/Problem_3/#problem-3","text":"","title":"Problem 3"},{"location":"1%20Physics/3%20Waves/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/3%20Waves/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/4%20Electromagnetism/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/5%20Circuits/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"1%20Physics/6%20Statistics/Problem_2/","text":"Problem 2","title":"Problem 2"},{"location":"1%20Physics/6%20Statistics/Problem_2/#problem-2","text":"","title":"Problem 2"},{"location":"1%20Physics/7%20Measurements/Problem_1/","text":"Problem 1","title":"Problem 1"},{"location":"1%20Physics/7%20Measurements/Problem_1/#problem-1","text":"","title":"Problem 1"},{"location":"2%20Mathematics/1%20Linear_algebra/","text":"Linear Algebra","title":"Linear Algebra"},{"location":"2%20Mathematics/1%20Linear_algebra/#linear-algebra","text":"","title":"Linear Algebra"},{"location":"2%20Mathematics/2%20Analytic_geometry/","text":"Analytic geometry","title":"Analytic geometry"},{"location":"2%20Mathematics/2%20Analytic_geometry/#analytic-geometry","text":"","title":"Analytic geometry"},{"location":"2%20Mathematics/3%20Calculus/","text":"Calculus","title":"Calculus"},{"location":"2%20Mathematics/3%20Calculus/#calculus","text":"","title":"Calculus"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/","text":"Set Theory","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_02%20Set_Theory/#set-theory","text":"","title":"Set Theory"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/","text":"Relations","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_03%20Relations/#relations","text":"","title":"Relations"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/","text":"Functions","title":"Functions"},{"location":"3%20Discret_Mathematics/1%20Set%20Theory%20and%20.../_04%20Functions/#functions","text":"","title":"Functions"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/","text":"Combinatorics","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_05%20Combinatorics/#combinatorics","text":"","title":"Combinatorics"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/","text":"Number Theory","title":"Number Theory"},{"location":"3%20Discret_Mathematics/2%20Number%20Theory%20and%20.../_08%20Number_Theory/#number-theory","text":"","title":"Number Theory"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/","text":"Sequences and Series","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_06%20Sequences_and_Series/#sequences-and-series","text":"","title":"Sequences and Series"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/","text":"Induction","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_07%20Induction/#induction","text":"","title":"Induction"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/","text":"Recurrence","title":"Recurrence"},{"location":"3%20Discret_Mathematics/3%20Recurrence%20and%20.../_09%20Recurrence/#recurrence","text":"","title":"Recurrence"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/","text":"Graph Theory","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/4%20Graph%20Theory%20and%20.../_10%20Graph_Theory/#graph-theory","text":"","title":"Graph Theory"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/","text":"Logic","title":"Logic"},{"location":"3%20Discret_Mathematics/5%20Logic/_01%20Logic/#logic","text":"","title":"Logic"}]}